[package]
name = "zune-image"
version = "0.4.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[features]
# Single based image decoders and encoders
log = ["zune-core/log"]
ppm = ["zune-ppm"]
jpeg = ["zune-jpeg", "jpeg-encoder"]
png = ["zune-png"]
psd = ["zune-psd"]
farbfeld = ["zune-farbfeld"]
qoi = ["zune-qoi"]
jpeg-xl = ["zune-jpegxl"]
hdr = ["zune-hdr"]
bmp = ["zune-bmp"]
# Serde serialization support
serde-support = ["zune-core/serde", "serde"]
# All image formats
image_formats = ["jpeg", "ppm", "png", "psd", "farbfeld", "qoi", "jpeg-xl", "hdr", "bmp"]
# External crates that help us handle metadata
metadata = ["kamadak-exif"]
# Every supported thing
default = ["all"]
# Whether to use threads or not for some operations
threads = ["zune-jpegxl/threads"]
# Simd support
simd = ["zune-jpeg/x86", "zune-png/sse"]

all = ["image_formats", "serde-support", "metadata", "threads", "simd", "log"]

[dependencies]
#zune-imageprocs = { path = "../zune-imageprocs", optional = true }
# Core primitives
zune-core = { path = "../zune-core", version = "0.4" }
# Images
zune-png = { path = "../zune-png", optional = true }
zune-jpeg = { path = "../zune-jpeg", optional = true }
zune-ppm = { path = "../zune-ppm", optional = true }
zune-psd = { path = "../zune-psd", optional = true }
zune-farbfeld = { path = "../zune-farbfeld", optional = true }
zune-qoi = { path = "../zune-qoi", optional = true }
zune-jpegxl = { path = "../zune-jpegxl", optional = true }
zune-hdr = { path = "../zune-hdr", optional = true }
zune-bmp = { path = "../zune-bmp", optional = true }
# Channel conversions in a safe way
bytemuck = { version = "1.13", default-features = false }
# Serializing info
serde = { version = "1.0.152", optional = true }
# External image APIs
jpeg-encoder = { version = "0.5.1", optional = true, features = ["simd", "std"] }

# metadata
kamadak-exif = { version = "0.5.5", optional = true }


[dev-dependencies]
num-complex = "0.4.3" # Runs generate-fractals
